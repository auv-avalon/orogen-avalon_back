name "avalon_back"
version "0.1"

using_task_library "low_level_driver"
using_task_library "xsens_imu"
#using_task_library "dfki_imu"

using_task_library "dsp3000"

using_task_library 'state_estimator'
#using_task_library 'avalon_pose_estimator'

using_task_library "sonar_driver"
#using_task_library "acoustic_modem"

#using_task_library "motcon_controller"
using_task_library "avalon_control"
#using_task_library "sauce_control"
#using_task_library "pipeline_follower"

using_task_library "canbus"
using_task_library "hbridge"

#using_task_library "sonar_servoing"


deployment 'avalon_control' do
    task("motion_control", "avalon_control::MotionControlTask")
#    task("motcon", "motcon_controller::MotconControllerTask")
    task("position_control", "avalon_control::PositionControlTask")
    task("hbridge", "hbridge::Task").
        #triggered. #try for avalon periodic to handle settings correct
	periodic(0.001).
                realtime.
                priority(90)
    task("can", "canbus::Task")
    add_default_logger
end

simple_deployment "low_level", "low_level_driver::LowLevelTask"
simple_deployment "sonar", "sonar_driver::SonarDriverMicronTask"
#simple_deployment "modem", "acoustic_modem::AcousticModemTask"

simple_deployment("fog", "dsp3000::Task").
	realtime.
	highest_priority
#simple_deployment("imu", "dfki_imu::Task").
#	realtime.
#	highest_priority
simple_deployment('pose_estimator', 'state_estimator::Task').
	realtime.
	highest_priority
simple_deployment('xsens','xsens_imu::Task').
	realtime.
	highest_priority
#simple_deployment('avalon_pose_estimator', 'avalon_pose_estimator::Task').
#	realtime.
#	highest_priority

#simple_deployment 'pipeline_follower', 'pipeline_follower::Task'
#simple_deployment 'sonar_servoing', 'sonar_servoing::Task'
#simple_deployment 'buoy_cutter', 'sauce_control::BuoyCutterTask'

